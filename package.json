{
  "name": "grokchain",
  "version": "1.0.0",
  "description": "Next-generation AI-powered blockchain with intelligent consensus mechanisms and dynamic fee optimization",
  "main": "backend/dist/index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "node backend/dist/index.js",
    "test": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:unit": "jest tests/unit --coverage",
    "test:integration": "jest tests/integration --coverage",
    "test:e2e": "jest tests/e2e --coverage",
    "test:watch": "jest --watch",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "type-check": "tsc --noEmit",
    "clean": "rm -rf dist build node_modules backend/node_modules frontend/node_modules",
    "install:all": "npm install && cd backend && npm install && cd ../frontend && npm install",
    "docker:build": "docker build -t grokchain .",
    "docker:run": "docker run -p 4000:4000 grokchain",
    "docker:compose": "docker-compose up -d",
    "docker:compose:down": "docker-compose down",
    "deploy:vercel": "vercel --prod",
    "deploy:railway": "railway up",
    "docs:generate": "typedoc --out docs/api backend/src",
    "security:audit": "npm audit && npm audit fix",
    "performance:test": "artillery run tests/performance/load-test.yml",
    "benchmark": "node tests/benchmark/benchmark.js"
  },
  "keywords": [
    "blockchain",
    "ai",
    "artificial-intelligence",
    "consensus",
    "cryptocurrency",
    "defi",
    "ethereum",
    "smart-contracts",
    "web3",
    "typescript",
    "react",
    "nodejs"
  ],
  "author": {
    "name": "GrokChain Team",
    "email": "team@grok-chain.xyz",
    "url": "https://grok-chain.xyz"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/grokchain.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/grokchain/issues"
  },
  "homepage": "https://grok-chain.xyz",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/jest": "^29.5.8",
    "@types/node": "^20.9.0",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.12.0",
    "artillery": "^2.0.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "jest": "^29.7.0",
    "prettier": "^3.1.0",
    "ts-jest": "^29.1.1",
    "typedoc": "^0.25.2",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "morgan": "^1.10.0",
    "dotenv": "^16.3.1",
    "better-sqlite3": "^9.2.2",
    "pg": "^8.11.3",
    "redis": "^4.6.10",
    "ws": "^8.14.2",
    "crypto": "^1.0.1",
    "node-fetch": "^3.3.2",
    "zod": "^3.22.4",
    "joi": "^17.11.0",
    "winston": "^3.11.0",
    "pino": "^8.16.2",
    "rate-limiter-flexible": "^3.0.8",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "jsonwebtoken": "^9.0.2",
    "bcryptjs": "^2.4.3",
    "uuid": "^9.0.1",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "axios": "^1.6.2",
    "socket.io": "^4.7.4",
    "socket.io-client": "^4.7.4"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "backend/src/**/*.ts",
      "frontend/src/**/*.ts",
      "frontend/src/**/*.tsx",
      "!**/*.d.ts",
      "!**/node_modules/**"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  },
  "eslintConfig": {
    "extends": [
      "@typescript-eslint/recommended",
      "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint"
    ],
    "rules": {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/explicit-function-return-type": "warn",
      "@typescript-eslint/no-explicit-any": "warn"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 80,
    "tabWidth": 2
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
